
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module E_Audio(

	//////////// Audio //////////
	input 		          		AUD_ADCDAT,
	inout 		          		AUD_ADCLRCK,
	inout 		          		AUD_BCLK,
	output		          		AUD_DACDAT,
	inout 		          		AUD_DACLRCK,
	output		          		AUD_XCK,

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,

	//////////// I2C for Audio and Video-In //////////
	output		          		FPGA_I2C_SCLK,
	inout 		          		FPGA_I2C_SDAT,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
 
wire [15:0]ADC_L;
wire [15:0]ADC_R;
wire [15:0]DAC_L;
wire [15:0]DAC_R;
wire clock_50;
wire clk_18_4;

assign	AUD_ADCLRCK	=	AUD_DACLRCK;   // PREGUNTAR Q ES ESTO!!
assign	AUD_XCK		=	clk_18_4;

//=======================================================
//  Structural coding
//=======================================================

clk_18_4 clk_18_4_inst
(
	.refclk(CLOCK_50) ,	// input  refclk_sig
	.rst(1'b0) ,	// input  rst_sig
	.outclk_0(clk_18_4) ,	// output  outclk_0_sig
	.outclk_1(clock_50) 
);

I2C_AV_Config 		u3			//	Host Side
(		
	.iCLK		(clock_50),
	.iRST_N		(KEY[0]),
								   //	I2C Side
	.I2C_SCLK	( FPGA_I2C_SCLK ),
	.I2C_SDAT	( FPGA_I2C_SDAT )		
);

AUDIO_DAC_ADC AUDIO_DAC_ADC_inst
(
	.oAUD_BCK(AUD_BCLK) ,		// output  oAUD_BCK_sig
	.oAUD_DATA(AUD_DACDAT) ,	// output  oAUD_DATA_sig
	.oAUD_LRCK(AUD_DACLRCK) ,	// output  oAUD_LRCK_sig
	.iAUD_ADCDAT(AUD_ADCDAT) ,	// input  iAUD_ADCDAT_sig
	
	//ADC L and R
	.oAUD_inL(ADC_L) ,			// output [DATA_WIDTH-1:0] oAUD_inL_sig
	.oAUD_inR(ADC_R) ,			// output [DATA_WIDTH-1:0] oAUD_inR_sig
	
	// DAC L and R
	.iAUD_extR((SW[0]==0)?ADC_R:16'd0) ,			// input [DATA_WIDTH-1:0] iAUD_extR_sig
	.iAUD_extL((SW[0]==1)?ADC_L:16'd0) ,			// input [DATA_WIDTH-1:0] iAUD_extL_sig

	.iCLK_18_4(clk_18_4) ,		// input  iCLK_18_4_sig
	.iRST_N(KEY[0]) 				// input  iRST_N_sig
);

endmodule
